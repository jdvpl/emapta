// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Patient {
  id                   Int                 @id @default(autoincrement())
  name                 String
  gender               String
  dob                  DateTime
  address             String
  phone               String
  email               String
  emergencyContacts    Contact[]
  insurance           Insurance[]
  medicalHistories    MedicalHistory[]
  allergies           Allergy[]
  medications         Medication[]
  socialHistory       SocialHistory[]
  appointments        Appointment[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Contact {
  id           Int       @id @default(autoincrement())
  name         String
  phoneNumber  String
  relationship String
  patientId    Int
  patient      Patient  @relation(fields: [patientId], references: [id])
  createdAt    DateTime @default(now())
}

model Insurance {
  id                   Int       @id @default(autoincrement())
  provider             String
  policyNumber        String
  patientId           Int
  patient             Patient  @relation(fields: [patientId], references: [id])
  createdAt           DateTime @default(now())
}

model MedicalHistory {
  id               Int       @id @default(autoincrement())
  history          String
  diagnosisDate    DateTime
  patientId        Int
  patient          Patient   @relation(fields: [patientId], references: [id])
  createdAt        DateTime  @default(now())
}

model Allergy {
  id               Int       @id @default(autoincrement())
  allergyName      String
  severity         String
  patientId        Int
  patient          Patient   @relation(fields: [patientId], references: [id])
  createdAt        DateTime  @default(now())
}

model Medication {
  id               Int       @id @default(autoincrement())
  medicationName   String
  dosage           String
  patientId        Int
  patient          Patient   @relation(fields: [patientId], references: [id])
  createdAt        DateTime  @default(now())
}

model SocialHistory {
  id               Int       @id @default(autoincrement())
  history          String
  patientId        Int
  patient          Patient   @relation(fields: [patientId], references: [id])
  createdAt        DateTime  @default(now())
}

model Appointment {
  id               Int       @id @default(autoincrement())
  date             DateTime
  reason           String
  patientId        Int
  patient          Patient   @relation(fields: [patientId], references: [id])
  createdAt        DateTime  @default(now())
}
